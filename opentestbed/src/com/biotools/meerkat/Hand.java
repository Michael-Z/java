/*     */package com.biotools.meerkat;

/*     */
/*     */import java.io.Serializable;
/*     */
import java.util.StringTokenizer;

/*     */
/*     */public final class Hand
/*     */implements Serializable
/*     */
{
	/*     */public static final int	MAX_CARDS	= 7;
	/*     */private int[]				cards;

	/*     */
	/*     */public Hand()
	/*     */
	{
		/*  33 */this.cards = new int[8];
		/*  34 */this.cards[0] = 0;
		/*     */}

	/*     */
	/*     */public Hand(String cs)
	/*     */
	{
		/*  42 */this.cards = new int[8];
		/*  43 */this.cards[0] = 0;
		/*  44 */StringTokenizer t = new StringTokenizer(cs, " -");
		/*  45 */while (t.hasMoreTokens())
		{
			/*  46 */String s = t.nextToken();
			/*  47 */if (s.length() == 2)
			{
				/*  48 */Card c = new Card(s.charAt(0), s.charAt(1));
				/*  49 */if (c.getIndex() != -1)
					/*  50 */addCard(c);
				/*     */}
			/*     */}
		/*     */}

	/*     */
	/*     */public Hand(Hand h)
	/*     */
	{
		/*  61 */this.cards = new int[8];
		/*  62 */this.cards[0] = h.size();
		/*  63 */for (int i = 1; i <= this.cards[0]; i++)
			/*  64 */this.cards[i] = h.cards[i];
		/*     */}

	/*     */
	/*     */public void clear()
	/*     */
	{
		/*  72 */this.cards[0] = 0;
		/*     */}

	/*     */
	/*     */public final int size()
	/*     */
	{
		/*  80 */return this.cards[0];
		/*     */}

	/*     */
	/*     */public void removeCard()
	/*     */
	{
		/*  87 */assert (this.cards[0] > 0);
		/*  88 */this.cards[0] -= 1;
		/*     */}

	/*     */
	/*     */public void makeEmpty()
	/*     */
	{
		/*  95 */this.cards[0] = 0;
		/*     */}

	/*     */
	/*     */public boolean addCard(Card c)
	/*     */
	{
		/* 105 */if ((c == null) || (this.cards[0] == 7))
		{
			/* 106 */return false;
			/*     */}
		/* 108 */this.cards[0] += 1;
		/* 109 */this.cards[this.cards[0]] = c.getIndex();
		/* 110 */return true;
		/*     */}

	/*     */
	/*     */public boolean addCard(int i)
	/*     */
	{
		/* 119 */if (this.cards[0] == 7)
		{
			/* 120 */return false;
			/*     */}
		/* 122 */this.cards[0] += 1;
		/* 123 */this.cards[this.cards[0]] = i;
		/* 124 */return true;
		/*     */}

	/*     */
	/*     */public Card getCard(int pos)
	/*     */
	{
		/* 133 */assert ((pos >= 1) && (pos <= this.cards[0]));
		/* 134 */return new Card(this.cards[pos]);
		/*     */}

	/*     */
	/*     */public int getCardIndex(int pos)
	/*     */
	{
		/* 143 */return this.cards[pos];
		/*     */}

	/*     */
	/*     */public int getLastCardIndex()
	/*     */
	{
		/* 151 */return this.cards[this.cards[0]];
		/*     */}

	/*     */
	/*     */public void setCard(int pos, Card c)
	/*     */
	{
		/* 160 */if (this.cards[0] < pos)
			this.cards[0] = pos;
		/* 161 */this.cards[pos] = c.getIndex();
		/*     */}

	/*     */
	/*     */public void setCard(int pos, int cInd)
	/*     */
	{
		/* 170 */if (this.cards[0] < pos)
			this.cards[0] = pos;
		/* 171 */this.cards[pos] = cInd;
		/*     */}

	/*     */
	/*     */public int[] getCardArray()
	/*     */
	{
		/* 180 */return this.cards;
		/*     */}

	/*     */
	/*     */public void sort()
	/*     */
	{
		/* 188 */boolean flag = true;
		/*     */int i;
		/* 189 */for (i = 0; i < this.cards[0]; i++)
		/*     */
		{
			if (i == 0)
			{
				/* 191 */i = 1;
				continue;
			}
			/* 192 */if (this.cards[i] < this.cards[(i + 1)])
			{
				/* 193 */flag = true;
				/* 194 */int t = this.cards[i];
				/* 195 */this.cards[i] = this.cards[(i + 1)];
				/* 196 */this.cards[(i + 1)] = t;
				/*     */}
			/* 191 */i++;
			/*     */}
		/*     */}

	/*     */
	/*     */public boolean equals(Hand h)
	/*     */
	{
		/* 207 */if (h.size() != this.cards[0])
			return false;
		/* 208 */for (int i = 1; i <= this.cards[0]; i++)
		{
			/* 209 */if (this.cards[i] != h.cards[i])
				return false;
			/*     */}
		/* 211 */return true;
		/*     */}

	/*     */
	/*     */public String toString()
	/*     */
	{
		/* 218 */String s = new String();
		/* 219 */for (int i = 1; i <= this.cards[0]; i++)
		{
			/* 220 */s = s + " " + getCard(i).toString();
			/*     */}
		/* 222 */return s.trim();
		/*     */}

	/*     */
	/*     */public String flashingString()
	/*     */
	{
		/* 229 */String s = new String();
		/* 230 */for (int i = 1; i <= this.cards[0]; i++)
		{
			/* 231 */String str = getCard(i).toString();
			/* 232 */if (!str.equals("??"))
			{
				/* 233 */s = s + " " + str;
				/*     */}
			/*     */}
		/* 236 */return s.trim();
		/*     */}

	/*     */
	/*     */public boolean contains(Card c)
	/*     */
	{
		/* 245 */if (c == null)
			return false;
		/* 246 */for (int i = 1; i <= size(); i++)
		{
			/* 247 */if (getCard(i).equals(c))
				return true;
			/*     */}
		/* 249 */return false;
		/*     */}

	/*     */
	/*     */public void addHand(Hand h)
	/*     */
	{
		/* 257 */for (int i = 1; i <= h.size(); i++)
			/* 258 */addCard(h.getCard(i));
		/*     */}

	/*     */
	/*     */public void clearBadCards()
	/*     */
	{
		/* 266 */for (int i = size(); i > 0; i--)
			/* 267 */if (!getCard(i).valid())
				/* 268 */removeCard(i);
		/*     */}

	/*     */
	/*     */public void removeCard(int i)
	/*     */
	{
		/* 283 */for (int j = i; j < size(); j++)
		{
			/* 284 */this.cards[j] = this.cards[(j + 1)];
			/*     */}
		/* 286 */if (this.cards[0] > 0)
			/* 287 */this.cards[0] -= 1;
		/*     */}

	/*     */
	/*     */public static String getCardString(Card c1, Card c2)
	/*     */
	{
		/* 298 */if ((!c1.valid()) || (!c2.valid()))
			return "??";
		/* 299 */if (c1.getRank() < c2.getRank())
		{
			/* 300 */Card t = c1;
			c1 = c2;
			c2 = t;
			/*     */}
		/* 302 */if (c1.getRank() == c2.getRank())
			/* 303 */return String.valueOf(Card.getRankChar(c1.getRank())) + String.valueOf(Card.getRankChar(c2.getRank()));
		/* 304 */if (c1.getSuit() == c2.getSuit())
		{
			/* 305 */return Card.getRankChar(c1.getRank()) + Card.getRankChar(c2.getRank()) + "s";
			/*     */}
		/* 307 */return Card.getRankChar(c1.getRank()) + Card.getRankChar(c2.getRank()) + "o";
		/*     */}

	/*     */
	/*     */public final Card getLastCard()
	/*     */
	{
		/* 315 */return getCard(this.cards[0]);
		/*     */}

	/*     */
	/*     */public Card getFirstCard()
	/*     */
	{
		/* 322 */return getCard(1);
		/*     */}

	/*     */
	/*     */public Card getSecondCard()
	/*     */
	{
		/* 329 */return getCard(2);
		/*     */}
	/*     */
}

/* Location:           C:\Users\Ash\Downloads\Meerkat-API-2.5 (1)\Meerkat-API\meerkat-api.jar
 * Qualified Name:     com.biotools.meerkat.Hand
 * JD-Core Version:    0.6.2
 */